{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { initalPostList } from '../constants/blog';\nconst initialState = {\n  postList: initalPostList,\n  editPost: null\n};\nexport const addPost = createAction('blog/addPost');\nexport const deletePost = createAction('blog/deletePost');\nexport const editPost = createAction('blog/editPost');\nexport const updatePost = createAction('blog/updatePost');\nconst blogReducer = createReducer(initialState, builder => {\n  builder.addCase(addPost, (state, action) => {\n    const post = action.payload;\n    state.postList.push(post);\n  }).addCase(deletePost, (state, action) => {\n    const postID = action.payload;\n    const findIndexPost = state.postList.findIndex(post => post.id === postID);\n    console.log(findIndexPost);\n    if (findIndexPost !== -1) {\n      state.postList.splice(findIndexPost, 1);\n    }\n  }).addCase(editPost, (state, action) => {\n    const postID = action.payload.id;\n    const findIndexPost = state.postList.findIndex(post => post.id === postID);\n    if (findIndexPost !== -1) {\n      state.editPost = action.payload;\n    }\n  }).addCase(updatePost, (state, action) => {\n    const postID = action.payload.id;\n    const isExitsPost = state.postList.some((post, index) => {\n      if (post.id === postID) {\n        state.postList[index] = action.payload;\n      }\n    });\n  });\n});\nexport default blogReducer;","map":{"version":3,"names":["createAction","createReducer","initalPostList","initialState","postList","editPost","addPost","deletePost","updatePost","blogReducer","builder","addCase","state","action","post","payload","push","postID","findIndexPost","findIndex","id","console","log","splice","isExitsPost","some","index"],"sources":["/home/quynhanh/Documents/redux-toolkit/old-local-blog/src/page/blog.reducer.ts"],"sourcesContent":["import { createAction, createReducer, current } from '@reduxjs/toolkit'\nimport { Post } from '../types/blog.type'\nimport { initalPostList } from '../constants/blog'\n\ninterface initialStateType {\n    postList: Post[] \n    editPost: Post | null\n}\n\nconst initialState: initialStateType = {\n    postList: initalPostList,\n    editPost: null\n}\n\nexport const addPost = createAction<Post>('blog/addPost');\n\nexport const deletePost = createAction<string>('blog/deletePost');\n\nexport const editPost = createAction<Post>('blog/editPost');\n\nexport const updatePost = createAction<Post>('blog/updatePost');\n\nconst blogReducer = createReducer(initialState, (builder) => {\n    builder\n        .addCase(addPost, (state, action) => {\n            const post = action.payload;\n            state.postList.push(post)\n\n        })\n        .addCase(deletePost, (state, action) => {\n            const postID = action.payload;\n            const findIndexPost = state.postList.findIndex((post) => post.id === postID);\n            console.log(findIndexPost)\n            if(findIndexPost !== -1) {\n                state.postList.splice(findIndexPost, 1)\n            }\n        })\n        .addCase(editPost, (state, action) => {\n            const postID = action.payload.id;\n            const findIndexPost = state.postList.findIndex((post) => post.id === postID);\n            if(findIndexPost !== -1) {\n                state.editPost = action.payload\n            }\n        })\n        .addCase(updatePost, (state, action) => {\n            const postID = action.payload.id;\n            const isExitsPost = state.postList.some((post, index) => {\n                if(post.id === postID) {\n                    state.postList[index] = action.payload;\n                }\n            });\n           \n        })\n})\n\nexport default blogReducer;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAiB,kBAAkB;AAEvE,SAASC,cAAc,QAAQ,mBAAmB;AAOlD,MAAMC,YAA8B,GAAG;EACnCC,QAAQ,EAAEF,cAAc;EACxBG,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGN,YAAY,CAAO,cAAc,CAAC;AAEzD,OAAO,MAAMO,UAAU,GAAGP,YAAY,CAAS,iBAAiB,CAAC;AAEjE,OAAO,MAAMK,QAAQ,GAAGL,YAAY,CAAO,eAAe,CAAC;AAE3D,OAAO,MAAMQ,UAAU,GAAGR,YAAY,CAAO,iBAAiB,CAAC;AAE/D,MAAMS,WAAW,GAAGR,aAAa,CAACE,YAAY,EAAGO,OAAO,IAAK;EACzDA,OAAO,CACFC,OAAO,CAACL,OAAO,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAK;IACjC,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC3BH,KAAK,CAACR,QAAQ,CAACY,IAAI,CAACF,IAAI,CAAC;EAE7B,CAAC,CAAC,CACDH,OAAO,CAACJ,UAAU,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAMI,MAAM,GAAGJ,MAAM,CAACE,OAAO;IAC7B,MAAMG,aAAa,GAAGN,KAAK,CAACR,QAAQ,CAACe,SAAS,CAAEL,IAAI,IAAKA,IAAI,CAACM,EAAE,KAAKH,MAAM,CAAC;IAC5EI,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;IAC1B,IAAGA,aAAa,KAAK,CAAC,CAAC,EAAE;MACrBN,KAAK,CAACR,QAAQ,CAACmB,MAAM,CAACL,aAAa,EAAE,CAAC,CAAC;IAC3C;EACJ,CAAC,CAAC,CACDP,OAAO,CAACN,QAAQ,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IAClC,MAAMI,MAAM,GAAGJ,MAAM,CAACE,OAAO,CAACK,EAAE;IAChC,MAAMF,aAAa,GAAGN,KAAK,CAACR,QAAQ,CAACe,SAAS,CAAEL,IAAI,IAAKA,IAAI,CAACM,EAAE,KAAKH,MAAM,CAAC;IAC5E,IAAGC,aAAa,KAAK,CAAC,CAAC,EAAE;MACrBN,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACE,OAAO;IACnC;EACJ,CAAC,CAAC,CACDJ,OAAO,CAACH,UAAU,EAAE,CAACI,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAMI,MAAM,GAAGJ,MAAM,CAACE,OAAO,CAACK,EAAE;IAChC,MAAMI,WAAW,GAAGZ,KAAK,CAACR,QAAQ,CAACqB,IAAI,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAK;MACrD,IAAGZ,IAAI,CAACM,EAAE,KAAKH,MAAM,EAAE;QACnBL,KAAK,CAACR,QAAQ,CAACsB,KAAK,CAAC,GAAGb,MAAM,CAACE,OAAO;MAC1C;IACJ,CAAC,CAAC;EAEN,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}